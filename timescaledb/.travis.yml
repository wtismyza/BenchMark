sudo: required
language: c
os:
  - linux
services:
  - docker
notifications:
  slack:
    if: (type = cron) AND (branch = master)
    on_success: change
    on_failure: always
    template:
      - "<!here>"
      - "%{repository_slug} (%{build_number}) : %{message}"
      - "Last commit: %{commit_subject} by %{author}"
      - "Build details: %{build_url}"
    rooms:
      - secure: "n4gHRucKsrlYNLVmoTxhsSbH780+8c+OjUCbaSxzyf7QYpbiD5HdCYAwBwJw6VkWPHQ+gXXy75szzcBmCOILEqx+m8WBLet+K9Kw1g3EE0r7lXT+OLWi0JJXvWBv/QdMwefilg7mC8P/USEwUSZfK/iW7tERvQc38ajGonqTsS4QWSg9zAlZZ1ZQJAALd4S4z+BJ/skAQNV+hAI1DLb8jf3A+Ex4/uMs9oAmfGiKqQTwmHlL698XFD83bv0XdxJYskkL8Eqt+19d0HD7lTCvez0yES2PCRXUWsWd2mIwTzGPYyDAU+5MifUvV2CaGDDAhIpzTYoZ4rl2SJc4uu6Fztat4UQB1GGc+TCNo5V8L3IdmzGjI2NSk88QItvpSiiNvtS0mr5As9dO8pIwuWwc4SL0u5bYw7Cq+y2s85huhKrYFVkdEptxjGInHjmq0KsuqpHoFE3E2DPD0fR0KhOekFkzobXg1cPubWHOmzm/PhVaMz3tFAtg83V2f+qg3UtfjMMgI84J/SsUdqv9J1G9R2iGxi56WKSWHHyMeloY8Pz2HFJzV0fPJQM+D5pJFpxQkSXyOMR72qJjeg0IZTiCndX9AEswbGQ3d/dwmYgbfzAah+OP37ZTYyEOsqJTEKvWq8GuJZTuhdJhhvA38Axv9jACcoQtxTKdKskOAUH3TWA="
env:
  global:
    - RETRY_PREFIX=$(if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then echo "travis_retry"; else echo ""; fi)
    - secure: "jy4DQH2syPR2v13igCNPTr044h3H/ilbJk6FifDMxGZVrOZR0dnkBx3O7qJMQOkEQvNxKsoq41k6HCP16qcgt4+HjxhcZonz5hKIiF8IpcB9r+TIlZunNTx7HjSNFZ3WCnham4AvMEthBHgAttRUhscy39ELCNUEobKS/youi7OHLOEXXShc84yTh3aSuGR3SnDVK1diLN5ufX6tN20pc3QvLMGZmA/jmJFcIQHGilhWGwwiJ45LSLwM9slvgGKbTM/K6btVBMOUnjM0h5WqPjRjDUL2tF+iZLEIpY8lFN/MQCnj0vP/BryDdoVPZS3TDQYwYuvASevQ4sOmULnM770jFqzClq4zkeM2GhMq67aYMmXjblu/qcLeCjZL+vfjMKpBMUydK/bCb097HvdRWDEPA0zItKWX9Kd6lVf2XbJCCh0ljp5REJEyk+plJ2V12nLpOPwY6zTtzcoTxEN6wcvUJfHAdNovpp63hWTnbAbEZamIdxwyCqpzThDobeD354TeXFUaKvrUw00iAiIhGL2QvwapaCbhlwM6NQAmdU3tMy3nZpka6bRI1kjyTh7CXfdwXV98ZJSiPdUFxyIgFNI2dKiL3BI1pvFDfq3mnmi3WqzZHCaQqDKNEtUrzxC40swIJGLcLUiqc5xX37P47jNDWrNIRDs8IdbM0tS9pFM="

jobs:
  include:

    # This runs tests on ARM32 emulation
    - if: branch = arm_test
      stage: test
      name: "Regression 11.0 ARM processors"
      env:
        - PG_VERSION=11.0
        - RETRY_PREFIX=""
      before_install:
        - docker run --rm --privileged multiarch/qemu-user-static:register --reset
        - docker run -d --name docker_arm_emulator -v ${TRAVIS_BUILD_DIR}:/timescaledb timescaledev/timescaledb-arm32:pg${PG_VERSION} /bin/sleep infinity
        - docker exec docker_arm_emulator /bin/bash -c "chown -R postgres:postgres /timescaledb"
      install:
        - docker exec docker_arm_emulator /bin/bash -c "mkdir /build && chown postgres:postgres /build"
        - docker exec -u postgres docker_arm_emulator /bin/bash -c "cd /build && CFLAGS='-Werror -O2' cmake /timescaledb -DCMAKE_BUILD_TYPE=Debug && make"
        - docker exec docker_arm_emulator /bin/bash -c "cd /build && make install"
      before_script:
      after_failure:
        - docker exec -u postgres -it docker_arm_emulator find /build -name regression.diffs -exec cat {} +
        - docker exec -u postgres -it docker_arm_emulator find /build -name postmaster.log -exec cat {} +
      script:
      # allow 50 mins to run
        - travis_wait 50 docker exec -u postgres docker_arm_emulator /bin/bash -c "cd /build && make installcheck IGNORES='multi_transaction_indexing bgw_db_scheduler continuous_aggs_insert continuous_aggs_bgw plan_ordered_append-11 parallel-11 compression_ddl continuous_aggs_insert continuous_aggs_multi'"
      after_script:
        - docker rm -f docker_arm_emulator

    - if: branch = arm_test
      stage: test
      name: "Regression 12.0 ARM processors"
      env:
        - PG_VERSION=12.0
        - RETRY_PREFIX=""
      before_install:
        - docker run --rm --privileged multiarch/qemu-user-static:register --reset
        - docker run -d --name docker_arm_emulator -v ${TRAVIS_BUILD_DIR}:/timescaledb timescaledev/timescaledb-arm32:pg${PG_VERSION} /bin/sleep infinity
        - docker exec docker_arm_emulator /bin/bash -c "chown -R postgres:postgres /timescaledb"
      install:
        - docker exec docker_arm_emulator /bin/bash -c "mkdir /build && chown postgres:postgres /build"
        - docker exec -u postgres docker_arm_emulator /bin/bash -c "cd /build && CFLAGS='-Werror -O2' cmake /timescaledb -DCMAKE_BUILD_TYPE=Debug && make"
        - docker exec docker_arm_emulator /bin/bash -c "cd /build && make install"
      before_script:
      after_failure:
        - docker exec -u postgres -it docker_arm_emulator find /build -name regression.diffs -exec cat {} +
        - docker exec -u postgres -it docker_arm_emulator find /build -name postmaster.log -exec cat {} +
      script:
      # allow 50 mins to run
        - travis_wait 50 docker exec -u postgres docker_arm_emulator /bin/bash -c "cd /build && make installcheck IGNORES='multi_transaction_indexing bgw_db_scheduler continuous_aggs_insert continuous_aggs_bgw plan_ordered_append-12 parallel-12 compression_ddl continuous_aggs_insert continuous_aggs_multi'"
      after_script:
        - docker rm -f docker_arm_emulator

