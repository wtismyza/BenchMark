# -*- Mode: Makefile -*-
#
# TARGET is specified on the command line
# eg.
# >make -f Makefile.single TARGET=algorithm_for1
#

OMC=$(MOSHHOME)/../Compiler/omc
CC=gcc

CRTHOME=$(MOSHHOME)/../SimulationRuntime/c

#CFLAGS= -W -Wall -ansi -pedantic-errors -Werror -g -I$(CRTHOME) -I.
CFLAGS= -O3 -finline-functions -I$(CRTHOME) -I.

LDFLAGS= -L$(CRTHOME) -lm

CDIR = csrc
ODIR = obj
BDIR = .

MOFILES = $(TARGET:=.mo)
TARGETS = $(MOFILES:%.mo=$(BDIR)/%)
OBJS = $(MOFILES:%.mo=$(ODIR)/%.main.o)
GENC = $(MOFILES:%.mo=$(CDIR)/%.c)


all : $(CDIR) $(ODIR) $(BDIR) $(TARGETS)


$(TARGETS) : $(BDIR)/% : $(ODIR)/%.main.o
	rm -f $@
	gcc -g -o $@ $(LDFLAGS) $<

$(OBJS) : $(ODIR)/%.main.o : $(CDIR)/%.c $(MOSHHOME)/build/main.c
	rm -f $(TARGETS)
	@echo compiling $(subst .main.o,,$@)
	$(CC) $(CFLAGS) \
	-DCFILE_TO_INCLUDE="\"$(subst $(ODIR),$(CDIR),$(subst .main.o,.c,$@))\""\
	 -DCFUNCTION_TO_CALL="$(subst $(ODIR)/,,$(subst .main.o,,$@))_read_call_write"\
	 -c -o $@ $(MOSHHOME)/build/main.c

$(GENC) : $(CDIR)/%.c : %.mo
	@$(OMC) $< +d=codegen > $@

$(CDIR) $(ODIR) $(BDIR) : % :
	mkdir $@

.SUFFIXES: .mo


.mo.c:
	if not @$(OMC) $< +d=codegen > $(<:.mo=.c); then cat $(<:.mo=.c); fi

clean :
	rm -f $(TARGETS)
	rm -f $(OBJS)
	rm -f $(GENC)

