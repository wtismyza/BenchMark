#ifndef INC_flatmodelicaTokenTypes_hpp_
#define INC_flatmodelicaTokenTypes_hpp_

/* $ANTLR 2.7.7 (2006-11-01): "flat_modelica_lexer.g" -> "flatmodelicaTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API flatmodelicaTokenTypes {
#endif
	enum {
		EOF_ = 1,
		ALGORITHM = 4,
		AND = 5,
		ANNOTATION = 6,
		BLOCK = 7,
		CODE = 8,
		CLASS = 9,
		CONNECT = 10,
		CONNECTOR = 11,
		CONSTANT = 12,
		DISCRETE = 13,
		EACH = 14,
		ELSE = 15,
		ELSEIF = 16,
		ELSEWHEN = 17,
		END = 18,
		ENUMERATION = 19,
		EQUATION = 20,
		ENCAPSULATED = 21,
		EXTENDS = 22,
		EXTERNAL = 23,
		FALSE = 24,
		FINAL = 25,
		FLOW = 26,
		FOR = 27,
		FUNCTION = 28,
		IF = 29,
		IMPORT = 30,
		IN = 31,
		INITIAL = 32,
		INNER = 33,
		INPUT = 34,
		LOOP = 35,
		MODEL = 36,
		NOT = 37,
		OUTER = 38,
		OVERLOAD = 39,
		OR = 40,
		OUTPUT = 41,
		PACKAGE = 42,
		PARAMETER = 43,
		PARTIAL = 44,
		PROTECTED = 45,
		PUBLIC = 46,
		RECORD = 47,
		REDECLARE = 48,
		REPLACEABLE = 49,
		RESULTS = 50,
		THEN = 51,
		TRUE = 52,
		TYPE = 53,
		UNSIGNED_REAL = 54,
		WHEN = 55,
		WHILE = 56,
		WITHIN = 57,
		ABSTYPE = 58,
		AS = 59,
		AXIOM = 60,
		DATATYPE = 61,
		FAIL = 62,
		LET = 63,
		INTERFACE = 64,
		MODULE = 65,
		OF = 66,
		RELATION = 67,
		RULE = 68,
		VAL = 69,
		WILD = 70,
		WITH = 71,
		WITHTYPE = 72,
		LPAR = 73,
		RPAR = 74,
		LBRACK = 75,
		RBRACK = 76,
		LBRACE = 77,
		RBRACE = 78,
		EQUALS = 79,
		ASSIGN = 80,
		PLUS = 81,
		MINUS = 82,
		STAR = 83,
		SLASH = 84,
		DOT = 85,
		COMMA = 86,
		LESS = 87,
		LESSEQ = 88,
		GREATER = 89,
		GREATEREQ = 90,
		EQEQ = 91,
		LESSGT = 92,
		COLON = 93,
		SEMICOLON = 94,
		POWER = 95,
		YIELDS = 96,
		AMPERSAND = 97,
		PIPEBAR = 98,
		COLONCOLON = 99,
		DASHES = 100,
		WS = 101,
		ML_COMMENT = 102,
		ML_COMMENT_CHAR = 103,
		SL_COMMENT = 104,
		IDENT = 105,
		TYVARIDENT = 106,
		NONDIGIT = 107,
		DIGIT = 108,
		EXPONENT = 109,
		UNSIGNED_INTEGER = 110,
		STRING = 111,
		SCHAR = 112,
		SESCAPE = 113,
		ESC = 114,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_flatmodelicaTokenTypes_hpp_*/
