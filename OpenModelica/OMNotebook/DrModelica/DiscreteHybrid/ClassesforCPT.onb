<!DOCTYPE OMNotebook>
<Notebook>
  <GroupCell closed="false">
    <GroupCell closed="false">
      <TextCell style="Title">
        <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:10px; margin-bottom:10px; margin-left:10px; margin-right:10px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Arial'; font-size:38pt; font-weight:600; color:#000000;">Classes for Connectors, Places and Transitions&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
      </TextCell>
      <GroupCell closed="false">
        <TextCell style="Section">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times'; font-size:18pt; font-weight:600; color:#000000;">Petri Nets&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <TextCell style="Text">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; font-style:italic; color:#000000;">Petri Nets&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> are bipartite graphs that only allow connection of different kinds of nodes, places to transitions or transitions to places. The Modelica type system can ensure that only legal connections are made if we define two different connector classes, one class &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">PTPort&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> for for places to transitions-with class prefix and variable suffixes &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">PT&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">, and another class TP&lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">Port&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> for transitions for places - with class prefix and variable suffixes TP. Since variable names are different, the connector types are different in the Modelica type system, even though the connector classes in both cases represent the same kind of variables:state and firing information. &lt;br />&lt;br />In order to have slightly different connector icons for the input version (filled triangle) and the output version (unfilled triangle), we also define otherwise identical input and output versions of these connector classes, see below. There is also a &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">ConditionPort&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> connector class for specifying an optional input condition to a &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">Transition&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">. &lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <GraphCell style="Graph" closed="false">
          <Input>connector PTPort   "Connecting Places to Transitions"
  Boolean sPT      "state information";
  Boolean fPT      "firing information";
end PTPort;</Input>
          <Output>{PTPort}</Output>
        </GraphCell>
        <GraphCell style="Graph" closed="false">
          <Input>connector PTPortIn  = PTPort;        // Input version of PTPort</Input>
          <Output>{PTPortIn}</Output>
        </GraphCell>
        <GraphCell style="Graph" closed="false">
          <Input>connector PTPortOut = PTPort;        // Output version of PTPort</Input>
          <Output>{PTPortOut}</Output>
        </GraphCell>
        <GraphCell style="Graph" closed="false">
          <Input>connector TPPort     "Connecting Transitions to Places"
  Boolean sTP       "state information";
  Boolean fTP          "firing information";
end TPPort;</Input>
          <Output>{TPPort}</Output>
        </GraphCell>
        <GraphCell style="Graph" closed="false">
          <Input>connector TPPortIn  = TPPort;        // Input version of PTPort</Input>
          <Output>{TPPortIn}</Output>
        </GraphCell>
        <GraphCell style="Graph" closed="false">
          <Input>connector TPPortOut = TPPort;        // Output version of PTPort</Input>
          <Output>{TPPortOut}</Output>
        </GraphCell>
        <GraphCell style="Graph" closed="false">
          <Input>connector ConditionPort     "Optional condition to a Transition"
  Boolean c(start=true);
end ConditionPort;</Input>
          <Output>{ConditionPort}</Output>
        </GraphCell>
        <TextCell style="Text">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">&lt;br />We now define &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">Place&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> and &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">Transition&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> classes.&lt;br />&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <GraphCell style="Graph" closed="false">
          <Input>class Place
  constant Integer nIn  = 1      "Number of input transition ports";
  constant Integer nOut = 1      "Number of output transition ports";
  TPPortIn  inTrans[nIn]             "Vector of input transition connectors";
  PTPortOut outTrans[nOut]         "Vector of output transition connectors";
  Boolean   state;
  Boolean   ostate;
  Boolean   d1, d2;           // Dummy variables
 equation
  ostate = pre(state);            // ostate is the current state
                       // Report state to input transitions, vector equation
  cat(1,inTrans.sTP,{d1}) = cat(1,{ostate},inTrans.sTP or inTrans.fTP);
                       // Report state to output transitions, column matrix equation
  [outTrans.sPT,{d2}] = [{ostate},outTrans.sPT and not outTrans.fPT];
                       // Compute new state for next Petri net iteration
  state = (ostate and not anyTrue(outTrans.sPT)) or (anyTrue(inTrans.sTP));
end Place;</Input>
          <Output>{Place}</Output>
        </GraphCell>
        <GraphCell style="Graph" closed="false">
          <Input>class Transition
  ConditionPort condition     "Optional condition";
  constant Integer nIn  = 1;
  constant Integer nOut = 1;
  PTPortIn  inPlaces[nIn]             "Vector of input place connectors";
  TPPortOut outPlaces[nOut]           "Vector of output place connectors";
  Boolean   fire;
 equation
  fire = condition and allTrue(inPlaces.sPT) and not anyTrue(outPlaces.sTP);
                            // Report firing info to input places, vector equation
  inPlaces.fPT = fill(fire,nIn);
                             // Report firing info to output places, vector equation
  outPlaces.fTP = fill(fire,nOut);
end Transition;</Input>
          <Output>{Transition}</Output>
        </GraphCell>
        <TextCell style="Text">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">&lt;br />We also need utility &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">Boolean&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> reduction functions &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">anyTrue&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> and &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">allTrue&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">.&lt;br />&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <GraphCell style="Graph" closed="false">
          <Input>function anyTrue  "True, if at least one element is true in a vector"
  input  Boolean inp[:];
  output Boolean result;
 algorithm
  result := false;
  for i in 1:size(inp,1) loop
    result := result or inp[i];
  end for;
end anyTrue;</Input>
          <Output>{anyTrue}</Output>
        </GraphCell>
        <GraphCell style="Graph" closed="false">
          <Input>function allTrue  "True, if all elements are true in a vector"
  input  Boolean inp[:];
  output Boolean result;
 algorithm
  result := true;
  for i in 1:size(inp,1) loop
    result := result and inp[i];
  end for;
end allTrue;</Input>
          <Output>{allTrue}</Output>
        </GraphCell>
        <TextCell style="Text">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">&lt;br />All classes and functions are collected into a package called &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">NormalPetriNet&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">:&lt;br />&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <TextCell style="">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table style="-qt-table-type: root;">
&lt;tr>
&lt;td style="border: none;">
&lt;p align="right" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">encapsulated package NormalPetriNet&lt;br />  connector PTPort ...;&lt;br />  connector PTPortIn ...;&lt;br />  connector PTPortOut ...;&lt;br />  connector TPPort ...;&lt;br />  connector TPPortIn ...;&lt;br />  connector TPPortOut ...;&lt;br />  connector ConditionPort ...;&lt;br />  class Place ...;&lt;br />  class Transition ...;&lt;br />  function anyTrue ...;&lt;br />  function allTrue ...; &lt;br />end NormalPetriNet;&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
      </GroupCell>
      <GroupCell closed="false">
        <TextCell style="Section">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times'; font-size:18pt; font-weight:600; color:#000000;">A Modelica Petri Net Model and Simulation of a Job Shop System&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <TextCell style="Text">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">We now return to our job shop system example. Its Petri net graph is shown once more below in Figure 1, with the difference that the token has advanced, representing the condition C3 that a job is currently being processed.&lt;br />&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <TextCell style="Text">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;img src="file:///C:/Users/RAIN1_~1/AppData/Local/Temp/OpenModelica/24.png" width="560" height="212" />&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
          <Image name="file:///C:/Users/RAIN1_~1/AppData/Local/Temp/OpenModelica/24.png">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</Image>
        </TextCell>
        <TextCell style="Text">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Courier New'; font-size:12pt; font-weight:600; color:#000000;">Figure 1:&lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;"> The job shop system Petri Net graph once more. The job is in the stage of being processed.&lt;br />&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <TextCell style="Text">
          <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">We would now like to build a Modelica Petri net model of the job shop system, using our recently developed &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">NormalPetriNet&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> package. We need modified instances of the general &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">Place&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> and &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">Transition&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> classes in order to reflect the different numbers of input and output ports.The &lt;/span>&lt;span style=" font-family:'Courier New'; font-size:12pt; color:#000000;">JobShopSystem&lt;/span>&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;"> model follows below, containing these modified instances of places and transitions, as well as connection equations.&lt;br />&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
        </TextCell>
        <GraphCell style="Graph" closed="false">
          <Input>model JobShopSystem
  Transition arrival(nIn = 0, nOut = 1);         // E1
  Place      inwait(nIn = 1, nOut = 1);            // C2
  Transition synchronize(nIn = 2, nOut = 1);     // E2
  Place      processing(nIn = 1, nOut = 1);        // C3
  Transition parallel(nIn = 1, nOut = 2);        // E3
  Place      idle(nIn = 1, nOut = 1);            // C1
  Place      outwait(nIn = 1, nOut = 1);          // C4
  Transition delivery(nIn = 1, nOut = 0);        // E4
 equation
  connect(arrival.outPlaces, inwait.inTrans);
  connect(inwait.outTrans[1], synchronize.inPlaces[1]);
  connect(idle.outTrans[1], synchronize.inPlaces[2]);
  connect(synchronize.outPlaces[1], processing.inTrans[1]);
  connect(processing.outTrans[1], parallel.inPlaces[1]);
  connect(parallel.outPlaces[1], outwait.inTrans[1]);
  connect(parallel.outPlaces[2], idle.inTrans[1]);
  connect(outwait.outTrans[1], delivery.inPlaces[1]);
end JobShopSystem;</Input>
          <Output>{JobShopSystem}</Output>
        </GraphCell>
        <GroupCell closed="false">
          <TextCell style="Subsection">
            <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times'; font-size:14pt; font-weight:600; color:#000000;">Simulation of JobShopSystem&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
          </TextCell>
          <TextCell style="Text">
            <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">Finally we simulate the job shop system model using the above default settings, for a job that passes through the system and is processed.&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
          </TextCell>
          <GraphCell style="Graph" closed="false">
            <Input>loadModel(Modelica)</Input>
            <Output>true</Output>
          </GraphCell>
          <TextCell style="Text">
            <Text>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
p, li { white-space: pre-wrap; }
&lt;/style>&lt;/head>&lt;body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;">
&lt;table border="0" style="-qt-table-type: root; margin-top:5px; margin-bottom:5px; margin-left:5px; margin-right:5px;">
&lt;tr>
&lt;td style="border: none;">
&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:'Times New Roman'; font-size:12pt; color:#000000;">Simulation of the model fails as of October 2015, Will be fixed in the near future&lt;/span>&lt;/p>&lt;/td>&lt;/tr>&lt;/table>&lt;/body>&lt;/html></Text>
          </TextCell>
          <GraphCell style="Graph" closed="false">
            <Input>simulate( JobShopSystem, stopTime = 1 )</Input>
            <Output>record SimulationResult
    resultFile = "",
    messages = "Failed to build model: JobShopSystem"
end SimulationResult;
OMC-ERROR:
"[&lt;interactive>:1:1-3:18:writable] Warning: Connector .ConditionPort is not balanced: The number of potential variables (1) is not equal to the number of flow variables (0).
[&lt;interactive>:1:1-4:11:writable] Warning: Connector .TPPortOut is not balanced: The number of potential variables (2) is not equal to the number of flow variables (0).
[&lt;interactive>:9:3-9:76:writable] Error: Cannot resolve type of expression condition and allTrue(inPlaces.sPT). The operands have types connector ConditionPort
  Boolean(start = true) c;
end ConditionPort;, Boolean in component arrival.
Error: Error occurred while flattening model JobShopSystem
"</Output>
          </GraphCell>
          <GraphCell style="Graph" closed="false">
            <OMCPlot PlotType="0" XRangeMin="0" Title="" LogX="false" XRangeMax="0" AutoScale="true" Grid="detailed" LogY="false" CurveStyle="1" YRangeMin="0" LegendPosition="top" Footer="" YRangeMax="0" YLabel="" XLabel="time" CurveWidth="1"/>
            <Input>plot( inWait.state )</Input>
            <Output>true</Output>
          </GraphCell>
          <GraphCell style="Graph" closed="false">
            <OMCPlot PlotType="0" XRangeMin="0" Title="" LogX="false" XRangeMax="0" AutoScale="true" Grid="detailed" LogY="false" CurveStyle="1" YRangeMin="0" LegendPosition="top" Footer="" YRangeMax="0" YLabel="" XLabel="time" CurveWidth="1"/>
            <Input>plot( process.state )</Input>
            <Output>true</Output>
          </GraphCell>
          <GraphCell style="Graph" closed="false">
            <OMCPlot PlotType="0" XRangeMin="0" Title="" LogX="false" XRangeMax="0" AutoScale="true" Grid="detailed" LogY="false" CurveStyle="1" YRangeMin="0" LegendPosition="top" Footer="" YRangeMax="0" YLabel="" XLabel="time" CurveWidth="1"/>
            <Input>plot( idle.state )</Input>
            <Output>true</Output>
          </GraphCell>
          <GraphCell style="Graph" closed="false">
            <OMCPlot PlotType="0" XRangeMin="0" Title="" LogX="false" XRangeMax="0" AutoScale="true" Grid="detailed" LogY="false" CurveStyle="1" YRangeMin="0" LegendPosition="top" Footer="" YRangeMax="0" YLabel="" XLabel="time" CurveWidth="1"/>
            <Input>plot( outWait.state )</Input>
            <Output>true</Output>
          </GraphCell>
        </GroupCell>
      </GroupCell>
    </GroupCell>
  </GroupCell>
</Notebook>
